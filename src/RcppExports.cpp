// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// create_sin_cos
arma::mat create_sin_cos(int n_rows, int n_curves);
RcppExport SEXP atv_create_sin_cos(SEXP n_rowsSEXP, SEXP n_curvesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_rows(n_rowsSEXP);
    Rcpp::traits::input_parameter< int >::type n_curves(n_curvesSEXP);
    rcpp_result_gen = Rcpp::wrap(create_sin_cos(n_rows, n_curves));
    return rcpp_result_gen;
END_RCPP
}
// sin_fit_ols_parallel
arma::mat sin_fit_ols_parallel(arma::mat y, int n_curves);
RcppExport SEXP atv_sin_fit_ols_parallel(SEXP ySEXP, SEXP n_curvesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n_curves(n_curvesSEXP);
    rcpp_result_gen = Rcpp::wrap(sin_fit_ols_parallel(y, n_curves));
    return rcpp_result_gen;
END_RCPP
}
// convert_to_amplitude_phase
arma::mat convert_to_amplitude_phase(arma::mat coefs);
RcppExport SEXP atv_convert_to_amplitude_phase(SEXP coefsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type coefs(coefsSEXP);
    rcpp_result_gen = Rcpp::wrap(convert_to_amplitude_phase(coefs));
    return rcpp_result_gen;
END_RCPP
}
// amplitude_phase_adjust
arma::mat amplitude_phase_adjust(arma::mat coefs, int n, bool intercept);
RcppExport SEXP atv_amplitude_phase_adjust(SEXP coefsSEXP, SEXP nSEXP, SEXP interceptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type coefs(coefsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    rcpp_result_gen = Rcpp::wrap(amplitude_phase_adjust(coefs, n, intercept));
    return rcpp_result_gen;
END_RCPP
}
// amplitude_phase_adjust2
arma::mat amplitude_phase_adjust2(arma::mat coefs, int n, bool intercept);
RcppExport SEXP atv_amplitude_phase_adjust2(SEXP coefsSEXP, SEXP nSEXP, SEXP interceptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type coefs(coefsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    rcpp_result_gen = Rcpp::wrap(amplitude_phase_adjust2(coefs, n, intercept));
    return rcpp_result_gen;
END_RCPP
}
